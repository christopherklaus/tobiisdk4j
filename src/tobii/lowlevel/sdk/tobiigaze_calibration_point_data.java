package tobii.lowlevel.sdk;

import org.bridj.IntValuedEnum;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

import tobii.lowlevel.sdk.TobiiSDKLibrary.tobiigaze_calibration_point_status;
/**
 * Contains data about a calibration point sample.<br>
 * @field true_position       The point in normalized coordinates on the display area where the calibration stimulus was displayed.<br>
 * @field left_map_position   The left eye gaze point in normalized coordinates on the display area after calibration.<br>
 * @field left_status         Status code containing information about the validity and usage of the left eye data.<br>
 * @field right_map_position  The right eye gaze point in normalized coordinates on the display area after calibration.<br>
 * @field right_status        Status code containing information about the validity and usage of the right eye data.<br>
 * <i>native declaration : tobii_gaze_sdk/include/tobiigaze_data_types.h:452</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("TobiiGazeCore64") 
public class tobiigaze_calibration_point_data extends StructObject {
	/// C type : tobiigaze_point_2d_f
	@Field(0) 
	public tobiigaze_point_2d_f true_position() {
		return this.io.getNativeObjectField(this, 0);
	}
	/// C type : tobiigaze_point_2d_f
	@Field(0) 
	public tobiigaze_calibration_point_data true_position(tobiigaze_point_2d_f true_position) {
		this.io.setNativeObjectField(this, 0, true_position);
		return this;
	}
	/// C type : tobiigaze_point_2d_f
	@Field(1) 
	public tobiigaze_point_2d_f left_map_position() {
		return this.io.getNativeObjectField(this, 1);
	}
	/// C type : tobiigaze_point_2d_f
	@Field(1) 
	public tobiigaze_calibration_point_data left_map_position(tobiigaze_point_2d_f left_map_position) {
		this.io.setNativeObjectField(this, 1, left_map_position);
		return this;
	}
	/// C type : tobiigaze_calibration_point_status
	@Field(2) 
	public IntValuedEnum<tobiigaze_calibration_point_status > left_status() {
		return this.io.getEnumField(this, 2);
	}
	/// C type : tobiigaze_calibration_point_status
	@Field(2) 
	public tobiigaze_calibration_point_data left_status(IntValuedEnum<tobiigaze_calibration_point_status > left_status) {
		this.io.setEnumField(this, 2, left_status);
		return this;
	}
	/// C type : tobiigaze_point_2d_f
	@Field(3) 
	public tobiigaze_point_2d_f right_map_position() {
		return this.io.getNativeObjectField(this, 3);
	}
	/// C type : tobiigaze_point_2d_f
	@Field(3) 
	public tobiigaze_calibration_point_data right_map_position(tobiigaze_point_2d_f right_map_position) {
		this.io.setNativeObjectField(this, 3, right_map_position);
		return this;
	}
	/// C type : tobiigaze_calibration_point_status
	@Field(4) 
	public IntValuedEnum<tobiigaze_calibration_point_status > right_status() {
		return this.io.getEnumField(this, 4);
	}
	/// C type : tobiigaze_calibration_point_status
	@Field(4) 
	public tobiigaze_calibration_point_data right_status(IntValuedEnum<tobiigaze_calibration_point_status > right_status) {
		this.io.setEnumField(this, 4, right_status);
		return this;
	}
	public tobiigaze_calibration_point_data() {
		super();
	}
	public tobiigaze_calibration_point_data(Pointer pointer) {
		super(pointer);
	}
}
