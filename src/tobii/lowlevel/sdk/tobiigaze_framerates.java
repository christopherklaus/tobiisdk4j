package tobii.lowlevel.sdk;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * This structs hold information about available framerates.<br>
 * <i>native declaration : tobii_gaze_sdk/include/tobiigaze_data_types.h:466</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("TobiiGazeCore64") 
public class tobiigaze_framerates extends StructObject {
	/// C type : float[TOBIIGAZE_FRAMERATES_MAX_SIZE]
	@Array({32}) 
	@Field(0) 
	public Pointer<Float > framerates() {
		return this.io.getPointerField(this, 0);
	}
	@Field(1) 
	public int actual_size() {
		return this.io.getIntField(this, 1);
	}
	@Field(1) 
	public tobiigaze_framerates actual_size(int actual_size) {
		this.io.setIntField(this, 1, actual_size);
		return this;
	}
	public tobiigaze_framerates() {
		super();
	}
	public tobiigaze_framerates(Pointer pointer) {
		super(pointer);
	}
}
